#!/usr/bin/env python

# This implementation avoids having OpenSSL as a dependency just for MD5 hashing.

import os, argparse, hashlib

# Arguments
parser = argparse.ArgumentParser(description='Calculate the MD% hash of a file.')
parser.add_argument('file', action="store", metavar='file', type=argparse.FileType('rb'))
args = parser.parse_args()

# Calculate the file hash.
# Code from Lars Wirzenius: http://stackoverflow.com/questions/1131220/get-md5-hash-of-a-files-without-open-it-in-python/1131255#1131255
def md5_for_file(f, block_size=2**20):
    md5 = hashlib.md5()
    while True:
        data = f.read(block_size)
        if not data:
            break
        md5.update(data)
    return md5.hexdigest()

file_md5 = md5_for_file(args.file)
print file_md5
args.file.close()