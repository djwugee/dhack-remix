#!/bin/bash

# Usage: waltzify file.mp3 beats.json


MUSIC_FILE_IN="${1}"
MUSIC_FILE_IN_FOLDER=$(dirname "${MUSIC_FILE_IN}")
MUSIC_FILE_IN_BASENAME=$(basename "${MUSIC_FILE_IN}")

# Ensure we have the JSON analysis file.
# TODO: Cache JSON by file hash  (what does Echonest use?)
if [ "${2}" = "" ]
then
  JSON_FILE="${1}.json"
  echo "JSON file not passed in. Will try: ${JSON_FILE}"
else
  JSON_FILE="${2}"
  echo "JSON file passed in: ${JSON_FILE}"
fi

if [ ! -f "${JSON_FILE}" ]
then
  echo "JSON file (${JSON_FILE}) does not exist. Analyzing ${1} using Echonest..."
    analyze "${1}"
    JSON_FILE="${1}.json"
fi


# Calculate BPM

PATTERN="${3}"
if [ "${PATTERN}" = "" ]
then
  PATTERN="12[34]"
fi

BPM=`bpm "${JSON_FILE}"`
echo "${BPM}" > "${MUSIC_FILE_IN} - ${BPM}.txt"

# Create output folder.

TIME=$(date "+%Y-%m-%d at %H-%M-%S")
MUSIC_FOLDER=$(mktemp -d "${MUSIC_FILE_IN_FOLDER}/${MUSIC_FILE_IN_BASENAME}.${TIME}.XXXX")
echo "${MUSIC_FOLDER}"
cp "${MUSIC_FILE_IN}"  "${MUSIC_FOLDER}/${MUSIC_FILE_IN_BASENAME}"


# Convert to .wav for waltz_blender

MUSIC_FILE_IN_EXTENSION="${MUSIC_FILE_IN_BASENAME##*.}"
if [ "${MUSIC_FILE_IN_EXTENSION}" = "wav" ] # Case-sensitive, but useful for yt-wz
then
  MUSIC_FILE="${MUSIC_FOLDER}/${MUSIC_FILE_IN_BASENAME}"
else
  # TODO: Cygwin workaround for weird characters in the file name.
  wavify "${MUSIC_FOLDER}/${MUSIC_FILE_IN_BASENAME}"
  MUSIC_FILE="${MUSIC_FOLDER}/${MUSIC_FILE_IN_BASENAME}.wav"
fi


# Sanity Check

if [ ! -f "${MUSIC_FILE}" ]
then
	echo "Could not produce .wav file for hacking."
	exit 1
fi

# Go!

waltz_blender "${MUSIC_FILE}" "${JSON_FILE}" "${PATTERN}" 5
waltz_blender "${MUSIC_FILE}" "${JSON_FILE}" "${PATTERN}" 25
waltz_blender "${MUSIC_FILE}" "${JSON_FILE}" "${PATTERN}" 100